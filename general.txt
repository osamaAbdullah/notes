// user bit.ly to make shorter emails

accept="image/*" // this is an attribute for file input HTML5

<th width="10%"></th>

https://github.com/stevebauman/purify // html purifier

https://carbon.now.sh/ // make images out of code snipt

// alias for powershell
C:\Users\osama\Documents\WindowsPowerShell\profile.ps1 // path of the alias file
notepad $((Split-Path $profile -Parent) + "\profile.ps1") // to create the file
Set-Alias <alias> <command>
...
Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Unrestricted // if script couldn't run then this command will help


// vhost in xampp
<VirtualHost *:80>
    ServerName shipnova.demo
    DocumentRoot "C:/Users/osama/apps/htdocs/projects/shipnova/public"
    SetEnv APPLICATION_ENV "development"
    <Directory "C:/Users/osama/apps/htdocs/projects/shipnova/public">
        DirectoryIndex index.php
        AllowOverride All
        Order allow,deny
        Allow from all
    </Directory>
</VirtualHost>
C:\Users\osama\apps\apache\conf\extra\httpd-vhosts.conf // add it here
	
	127.0.0.1       shipnova.demo
C:\Windows\System32\drivers\etc\hosts // add it here



the c programming language K&R


RAID: use more than one hard to seed up read and write, and to backup data to be safe // also there are SW and HW paids
AHCI: new version of sata it's fast

// cmd windows
1 - chkdsk // this command will check for error in hard drive
2 - chkdsk /f // this command will check for error in hard drive then fixed it (it will need restart and after that will run )

ipconfig /all // more info about network
ipconfig /renew // get new ip from DHCP
ipconfig /release // relese ur ip (disconnect to internet)
ping <ip> // see if u are connected with that ip
ping -t <ip> // keep pining untill namullay stop (in other oses it's the default ping)
// ping will give you the ip of domain even if it doesn't work
netstat // all connection that system currently have
netstat -n // output number instread of names
netstat -f // output domain names
netstat -a // all connection that system has even if it's listening finished everything
tcpview is graphical user interface for netstat https://docs.microsoft.com/en-us/sysinternals/downloads/tcpview
nslookup // to show ur DNS server also the language to query DNS server 
nslookup <ip> // to show domain of that ip (server)
// with port forwarding u can configure a router to forward public trafic to cirtain ip(device)
// tellnet in like SSH 
traceroute -I <domain/ip> // show the path to destination host
https://www.wireshark.org/ // protocol analyzer see all packets sent and recived

//domain
https://www.hover.com/
https://www.namecheap.com/
https://www.cloudflare.com/

https://jakearchibald.github.io/svgomg/ // optimize svgs

https://unpkg.com/<library_name>

hit "t" in github reposetory to search for file

in sorting 
asc // from small to big
desc // from big to small

//laravel mix
mix.setResourceRoot('/c');

CSRF Explained
A cross-site request forgery occurs when a user who is authenticated on a site is forced to make an unwanted request to that site. This request originates from a different origin, and that’s what makes this is a cross-origin request forgery.
Take for example, a banking application. A user is authenticated on the banking website through cookie(s) in their browser.
Now, the user visits a different site. This site has the following HTML in their page:
<img src="http://banking-site.com/transfer.do?acct=ALICE&amount=1000" />


Cookies, when used with the "HttpOnly" cookie flag, are not accessible through JavaScript
You can also set the "Secure cookie" flag to guarantee the cookie is only sent over HTTPS


rm -rf node_modules
rm package-lock.json yarn.lock
npm cache clear --force
npm install

ipconfig # check network interfaces windows

video streaming app: https://youtube.com/watch?v=m8Icp_Cid5o&feature=shares {

⭐️ Contents ⭐️
⌨️ (0:00:00) What is System Design
⌨️ (0:02:27) Design Patterns
⌨️ (0:04:07) Live Streaming System Design
⌨️ (0:07:42) Fault Tolerance
⌨️ (0:08:32) Extensibility
⌨️ (0:09:49) Testing
⌨️ (0:10:32) Summarizing the requirements
⌨️ (0:11:27) Core requirement - Streaming video
⌨️ (0:14:52) Diagramming the approaches
⌨️ (0:17:12) API Design
⌨️ (0:20:02) Database Design
⌨️ (0:22:32) Network Protocols
⌨️ (0:29:07) Choosing a Datastore
⌨️ (0:32:57) Uploading Raw Video Footage
⌨️ (0:34:37) Map Reduce for Video Transformation
⌨️ (0:39:24) WebRTC vs. MPEG DASH vs. HLS
⌨️ (0:41:55) Content Delivery Networks
⌨️ (0:42:27) High-Level Summary
⌨️ (0:44:48) Introduction to Low-Level Design 
⌨️ (0:47:00) Video Player Design
⌨️ (0:49:17) Engineering requirements
⌨️ (0:50:32) Use case UML diagram
⌨️ (1:02:32) Class UML Diagram
⌨️ (1:06:27) Sequence UML Diagram
⌨️ (1:11:49) Coding the Server
⌨️ (1:24:23) Resources for System Design
}


https://www.vfsglobalservices-germany.com/Global-Appointment/Home/SelectVAC?q=dePiaPfL2MJ7yDPEmQRU6fRZbx3aIpSal6PdG3Bxqq7rSNU6HabciCVot9dEwkhd



docker exec -t ce15f9afabe6 pg_dump \
-U anonymous_feedbacks_user \
-d anonymous_feedbacks \
--no-owner --no-privileges \
--rows-per-insert=65000 --column-inserts \
> dump_`date +%Y-%m-%d"__"%H:%M:%S`.sql

Server Sent Events (SSE) VS websocket

[logging]
you can make centrlized logging system, elk or so
and you can configure docker logging drive or whatever it called to send logs to this elastic db
then you can visulaize it through kibana
you can also use some log shipper fluent/filebeat to send logs to elastic
https://docs.docker.com/config/containers/logging/configure/
fluentd	Writes log messages to fluentd (forward input). The fluentd daemon must be running on the host machine.
so even log drive -> fluentd -> elastic
or docker -> filebeat -> elastic
one of those should work